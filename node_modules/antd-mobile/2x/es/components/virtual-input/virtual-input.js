import React, { forwardRef, useImperativeHandle, useLayoutEffect, useRef } from 'react';
import { mergeProps } from '../../utils/with-default-props';
var classPrefix = 'adm-virtual-input';
var defaultProps = {
  value: ''
};
export var VirtualInput = /*#__PURE__*/forwardRef(function (p, ref) {
  var props = mergeProps(defaultProps, p);
  var rootRef = useRef(null);
  useLayoutEffect(function () {
    var root = rootRef.current;
    if (!root) return;

    if (document.activeElement !== root) {
      return;
    }

    root.scrollTo({
      left: root.clientWidth
    });
  }, [props.value]);
  useImperativeHandle(ref, function () {
    return {
      focus: function focus() {
        var _a;

        (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      },
      blur: function blur() {
        var _a;

        (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();
      }
    };
  });
  return /*#__PURE__*/React.createElement("div", {
    ref: rootRef,
    className: classPrefix,
    tabIndex: 0,
    onFocus: props.onFocus,
    onBlur: props.onBlur,
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement("span", {
    className: classPrefix + "-content"
  }, props.value), /*#__PURE__*/React.createElement("div", {
    className: classPrefix + "-caret-container"
  }, /*#__PURE__*/React.createElement("div", {
    className: classPrefix + "-caret"
  })), !props.value && /*#__PURE__*/React.createElement("span", {
    className: classPrefix + "-placeholder"
  }, props.placeholder));
});