"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = api => {
  // 这几个配置需要合并配置
  const _api$userConfig = api.userConfig,
        _api$userConfig$exter = _api$userConfig.externals,
        externals = _api$userConfig$exter === void 0 ? {} : _api$userConfig$exter,
        _api$userConfig$scrip = _api$userConfig.scripts,
        scripts = _api$userConfig$scrip === void 0 ? [] : _api$userConfig$scrip,
        ssr = _api$userConfig.ssr,
        mobile5 = _api$userConfig.mobile5;

  const defaultOptions = _objectSpread({
    history: {
      type: 'hash'
    },
    title: false,
    // 默认内置了 Helmet
    targets: {
      ie: 9
    },
    hash: true,
    esbuild: {},
    // 不需要路由按需加载，只需要支持 import() 语法的 code splitting
    dynamicImportSyntax: {},
    nodeModulesTransform: {
      type: 'none',
      exclude: []
    },
    dva: {},
    routesExtend: {
      // 规定只有index文件会被识别成路由
      exclude: [/(?<!(index|\[index\]|404)(\.(js|jsx|ts|tsx)))$/, /model\.(j|t)sx?$/, /\.test\.(j|t)sx?$/, /service\.(j|t)sx?$/, /models\//, /components\//, /services\//]
    },
    mobile5: false
  }, api.userConfig);

  if (mobile5) {
    defaultOptions.antdMobile = true;
  } else {
    var _api$userConfig2;

    defaultOptions.antd = _objectSpread({}, ((_api$userConfig2 = api.userConfig) === null || _api$userConfig2 === void 0 ? void 0 : _api$userConfig2.antd) || {});
  } // ssr 路由必须是 browser


  if (ssr) {
    defaultOptions.history = {
      type: 'browser'
    }; // fix: https://github.com/umijs/umi/pull/7256

    defaultOptions.hash = false;
  }

  api.modifyDefaultConfig(memo => {
    return _objectSpread(_objectSpread({}, memo), defaultOptions);
  });
};

exports.default = _default;